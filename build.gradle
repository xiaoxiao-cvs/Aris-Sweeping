buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' } // 添加ParchmentMC仓库
        gradlePluginPortal()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '6.0.+', changing: true
        // classpath 'org.parchmentmc:librarian:1.+' // 暂时注释掉Parchment
    }
}
apply plugin: 'net.minecraftforge.gradle'
// apply plugin: 'org.parchmentmc.librarian.forgegradle' // 暂时注释掉Parchment插件
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.0.0-alpha'
group = 'com.arisweeping'
archivesBaseName = 'arisweeping'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft {
    // 使用Parchment映射获得更好的参数名
    mappings channel: 'official', version: '1.20.1'
    
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'arisweeping'

            mods {
                arisweeping {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'arisweeping'

            mods {
                arisweeping {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'arisweeping'

            mods {
                arisweeping {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'arisweeping', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                arisweeping {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = "Sponge Snapshots"
        url = "https://repo.spongepowered.org/repository/maven-public"
    }
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.2.0'
    
    // JSON处理
    implementation 'com.google.code.gson:gson:2.10.1'
    
    // 注解处理
    compileOnly 'org.jetbrains:annotations:24.0.1'
    
    // SLF4J日志系统 (Minecraft/Forge已经包含了实现)
    compileOnly 'org.slf4j:slf4j-api:1.7.36'
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: project.minecraft_version,
            minecraft_version_range: project.minecraft_version_range,
            forge_version: project.forge_version,
            forge_version_range: project.forge_version_range,
            loader_version_range: project.loader_version_range,
            mod_id: project.mod_id,
            mod_name: project.mod_name,
            mod_license: project.mod_license,
            mod_version: project.version,
            mod_authors: project.mod_authors,
            mod_description: project.mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact jar
        }
    }
    repositories {
        if (project.hasProperty('mavendir')) {
            maven { url project.mavendir }
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}